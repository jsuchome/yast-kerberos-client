/**
 * File:	clients/kerberos-client_auto.ycp
 * Package:	Configuration of kerberos-client
 * Summary:	Client for autoinstallation
 * Authors:	Jiri Suchomel <jsuchome@suse.cz>
 *
 * $Id$
 *
 * This is a client for autoinstallation. It takes its arguments,
 * goes through the configuration and return the setting.
 * Does not do any changes to the configuration.
 */

/**
 * @param first a map of kerberos-client settings
 * @return map edited settings or an empty map if canceled
 * @example map mm = $[ "FAIL_DELAY" : "77" ];
 * @example map ret = WFM::CallModule ("kerberos-client_auto", [ mm ]);
 */

{

textdomain "kerberos";

y2milestone("----------------------------------------");
y2milestone("Kerberos-client auto started");

import "Kerberos";
include "kerberos-client/wizards.ycp";

string func = WFM::Args(0);
map param = WFM::Args(1);

/* create a  summary*/
if(func == "Summary") {
    Kerberos::Import(param);
    return ( select(Kerberos::Summary(),0, ""));
}
else if (func == "Reset") {
    Kerberos::Import($[]);
	return $[];
}
else if (func == "Change") {
    Kerberos::Import(param);
    any res = KerberosAutoSequence();
    return res;
}
else if (func == "Result") {
    return(Kerberos::Export());
}
else if (func == "Write") {
	Kerberos::Import(param);
	Kerberos::write_only = true;
	boolean ret = Kerberos::Write();
	return ret;
}
/* unknown function */
else {
    y2error("unknown function: %1", func);
    return false;
}

y2milestone("Kerberos-client auto finished");
y2milestone("----------------------------------------");


/* EOF */
}
