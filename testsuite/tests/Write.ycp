/**
 *  Write.ycp
 *  Test of Kerberos::Write function
 *  Jiri Suchomel <jsuchome@suse.cz>
 *  $Id$
 */

{

    // testedfiles: Kerberos.ycp PamSettings.ycp
    import "Testsuite";
    import "Kerberos";

    map READ = $[
	"etc": $[
	    // /etc/krb5.conf
	    "krb5_conf" : $[
		"s" : $[
		    "libdefaults": $[],
		    "SUSE.CZ": $[],
		    "pam" : $[],
		],
	    ],
	    // /etc/security/pam_*
	    "security": $[
		"section": $[
		    "/etc/security/pam_unix2.conf": $[],
		    "/etc/security/pam_pwcheck.conf": $[]
		],
		"v": $[
		    "/etc/security/pam_unix2.conf": $[
			"password" : "nullok use_ldap use_krb5",
			"auth"	: "nullok use_krb5",
			"account": "use_krb5"
		    ],
		]
	    ],
	]
    ];

    map WRITE = $[];

    Testsuite::Dump ("==== writing without any changes =================================");

    Testsuite::Test(``(Kerberos::Write ()), [ $[], WRITE, $[] ], 0);

    Testsuite::Dump ("==== ssh modified (enabled) ======================================");

    Kerberos::ssh_modified = true;
    Kerberos::ssh_support = true;

    Testsuite::Test(``(Kerberos::Write ()), [ $[], WRITE, $[] ], 0);

    Testsuite::Dump ("==== kerberos disabled, ssh support disabled, krb5.conf untouched=");

    Kerberos::pam_modified = true;
    Kerberos::use_pam_krb = false;
    Kerberos::ssh_support = false;

    Testsuite::Test(``(Kerberos::Write ()), [ READ, WRITE, $[] ], 0);

    Testsuite::Dump ("\nThe map with original values is always read again in");
    Testsuite::Dump ("PamSettings::RemoveValue() function, so the output is strange...\n");

    Testsuite::Dump ("==== only krb5.conf modified =====================================");
    Testsuite::Dump ("==== (all sections exist) ========================================");

    Kerberos::pam_modified = false;
    Kerberos::ssh_modified = false;
    Kerberos::modified = true;

    Kerberos::default_realm = "SUSE.CZ";
    Kerberos::kdc = "chimera.suse.cz";

    Testsuite::Test(``(Kerberos::Write ()), [ READ, WRITE, $[] ], 0);

    Testsuite::Dump ("==== (pam section doesn't exist) =================================");
    READ = $[
	"etc": $[
	    "krb5_conf" : $[
		"s" : $[
		    "libdefaults": $[],
		    "SUSE.CZ": $[],
		],
	    ]
	]
    ];
    Kerberos::kpasswd_server = "user_defined"; // -> won't be written

    Testsuite::Test(``(Kerberos::Write ()), [ READ, $[], $[] ], 0);
}
